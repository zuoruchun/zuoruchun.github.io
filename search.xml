<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>再见沈以诚</title>
    <url>/2024/11/22/test/</url>
    <content><![CDATA[<p>if no date, what will happen?</p>
]]></content>
      <categories>
        <category>Linxiao</category>
      </categories>
  </entry>
  <entry>
    <title>使用DataGrip的Hive数据库连接阿里云服务器的Bug</title>
    <url>/2024/08/20/Computer/DataGripbug/</url>
    <content><![CDATA[<style>
  img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 80%; /* 根据需要调整大小 */
  }
</style>
<p>昨天将Hadoop迁移到阿里云服务器的时候，解决了不少bug，但是今天当我使用DataGrip远程SSH连接Hive数据库的时候，测试链接一直不通过，显示<code>SSH 隧道创建失败: Timeout expired: 30000 MILLISECONDS.</code></p>
<p>此时云服务器hadoop102的公网IP是47.99.155.XX在CSDN的教程中<a
href="https://blog.csdn.net/ggg6568/article/details/124314770">DataGrip
使用ssh认证连接远程数据库，如何配置_datagrip ssh-CSDN博客</a></p>
<span id="more"></span>
<p>在SSH配置完成后的下一步，它的配置如下</p>
<figure>
<img src="\pic\DataGrip配置失败.png" alt="DataGrip配置失败" />
<figcaption aria-hidden="true">DataGrip配置失败</figcaption>
</figure>
<p>这里的HOST地址填写的是公网IP，但是我在这里尝试使用自己的IP47.99.155.XX，就会报错SSH隧道创建失败。</p>
<p>尝试了很多次都没有办法，最后使用PyCharm来操作数据库，偶然成功了，最后发现，这里的HOST地址应该保留默认值localhost不变才能够连接成功</p>
<figure>
<img src="\pic\DataGrip配置成功.png" alt="DataGrip配置失败" />
<figcaption aria-hidden="true">DataGrip配置失败</figcaption>
</figure>
<p>虽然不知道具体原因，但好在问题确实出现在这里，得到了解决。</p>
]]></content>
      <categories>
        <category>Big data</category>
      </categories>
  </entry>
  <entry>
    <title>Windows切换成Macbook的一些软件</title>
    <url>/2024/08/07/Computer/SoftwareWindowsSwitchMtoMacbook/</url>
    <content><![CDATA[<table>
<colgroup>
<col style="width: 25%" />
<col style="width: 48%" />
<col style="width: 25%" />
</colgroup>
<thead>
<tr>
<th>Windows软件</th>
<th>软件优点</th>
<th>Macbook替代</th>
</tr>
</thead>
<tbody>
<tr>
<td>Notepad++</td>
<td>轻便的编辑器</td>
<td>Notepad--</td>
</tr>
<tr>
<td>clash</td>
<td>为皮嗯代理</td>
<td>clashX</td>
</tr>
<tr>
<td>知云文献翻译</td>
<td>翻译英文文献</td>
<td></td>
</tr>
<tr>
<td>SpaceSniffer</td>
<td>按大小排列C，D等盘的文件</td>
<td></td>
</tr>
<tr>
<td>Xshell</td>
<td>好用的ssh客户机</td>
<td>Terminus</td>
</tr>
<tr>
<td>Xftp</td>
<td>通过ssh图形化传文件</td>
<td>Terminus</td>
</tr>
<tr>
<td>Adobe Acrobat DC</td>
<td>便捷查看pdf等文件</td>
<td>Adobe Acrobat DC</td>
</tr>
<tr>
<td>Bandzip</td>
<td>解/压缩文件</td>
<td>Fastzip</td>
</tr>
<tr>
<td>CopyQ</td>
<td>比ctrl+V更好更好用的粘贴板工具</td>
<td>iCopy</td>
</tr>
<tr>
<td>Everything</td>
<td>完爆Win自带的文件查找功能</td>
<td>聚焦</td>
</tr>
<tr>
<td>FormatFactory</td>
<td>格式工厂</td>
<td>格式工厂</td>
</tr>
<tr>
<td>Potplayer</td>
<td>播放视频软件</td>
<td>IINA</td>
</tr>
<tr>
<td>Quicker</td>
<td>好用的工具箱</td>
<td></td>
</tr>
<tr>
<td>Typora</td>
<td>好用的Markdown编辑器</td>
<td>Typora</td>
</tr>
<tr>
<td>火绒</td>
<td>个人电脑最安全的管家</td>
<td>柠檬清理</td>
</tr>
<tr>
<td>Snipaste</td>
<td>世界上最好用的截图软件</td>
<td>Snipaste</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Windows and MacBook Software</category>
      </categories>
  </entry>
  <entry>
    <title>再见沈以诚</title>
    <url>/2023/05/23/Emotion/GoobyeEason/</url>
    <content><![CDATA[<p>属于我的沈以诚时代已经结束了。</p>
<p>突然挺喜欢苏打绿的歌。</p>
<p>好害怕分别。</p>
<p>以前睡醒的时候会是最想念的时候，现在睡醒是最难过的时候。</p>
]]></content>
      <categories>
        <category>Linxiao</category>
      </categories>
  </entry>
  <entry>
    <title>How to love ? How to love yourself or anyone?</title>
    <url>/2024/11/11/Emotion/Howtolove/</url>
    <content><![CDATA[<p>一个人的慢慢淡出，即使随着时间的流逝，也还是会久久不能释怀。</p>
<p>很多时候感觉有很多话在心里面，但是不知该如何表达出来，此刻想写下很多感悟，却总结不出。</p>
<p>一座城市一个人。</p>
<p>对于感情这方面的事情，我陷入了误区，是思想上的误区。我只会对一个初次见面的人会产生情愫，如果对于初次认识的人不是以在一起而相互了解的，我就不会再对她有什么情感上的感觉。换句话说，我对一见钟情💘这样的爱情很执着。但是问题是往往一见钟情的爱情不是建立在相互了解上的，在这种情况下的恋爱，往往在后面慢慢的就会发现，两个人并不合适。这就陷入了死循环，如果选择一见钟情，会产生性格不合；如果不是一见钟情，我不会有什么爱情的感觉。</p>
<p>感悟什么的到底算什么呢？需要的是自己做出改变，但是性格这个东西怎么改变呢？难以做出评价。</p>
]]></content>
      <categories>
        <category>Triviality</category>
      </categories>
  </entry>
  <entry>
    <title>No more love,more love</title>
    <url>/2024/11/08/Emotion/Nomorenomore/</url>
    <content><![CDATA[<p>More troubles are deeply involved.</p>
<p>Why do you start looking for your own mistakes after separation?
Isn't this self-inflicted? Every choice before was my best choice
according to the situation at the time, and the final fault was not
someone's fault, I don't want to always attribute it to myself. In my
opinion, I should hate, all hate, because I didn't do anything wrong, I
don't want to be separated, no matter what happens. I was broken up
inexplicably, which is the biggest mistake!</p>
]]></content>
      <categories>
        <category>Triviality</category>
      </categories>
  </entry>
  <entry>
    <title>git的一些操作</title>
    <url>/2024/09/26/Git/GitOperation/</url>
    <content><![CDATA[<p><code>git clone githun url</code> - 将github的内容克隆到本地</p>
<p><code>git init</code> - 初始化仓库.</p>
<p><code>git add .</code> - 添加文件到暂存区。</p>
<p><code>git commint -m "提交信息"</code> -
将暂存区内容添加到仓库中.</p>
<p><code>git push</code> - 推到github</p>
]]></content>
      <categories>
        <category>Computer common sense</category>
      </categories>
  </entry>
  <entry>
    <title>解决git报错443问题</title>
    <url>/2024/08/20/Git/HexoPort/</url>
    <content><![CDATA[<style>
  img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 80%; /* 根据需要调整大小 */
  }
</style>
<p>解决使用git时遇到Failed to connect to github.com port 443 after 21090
ms: Couldn‘t connect to server #
一、如果是在挂着梯子的情况下拉取或者推送代码的时候是否遇到了报错？
fatal: unable to access 'https://github.com/xxx/******.git/': Failed to
connect to github.com port 443 after 21090 ms: Couldn't connect to
server</p>
<p>一般出现这种问题都是开过VPN导致的本机系统端口号和git的端口号不一致导致的。</p>
<span id="more"></span>
<p>解决办法：</p>
<h2 id="查看本机系统端口号">1.查看本机系统端口号：</h2>
<p>设置-&gt;网络和Internet-&gt;代理</p>
<h2
id="设置git端口号和上面的端口号保持一致我的是10809">2.设置git端口号和上面的端口号保持一致（我的是10809）：</h2>
<p>git config --global http.proxy 127.0.0.1:10809</p>
<p>git config --global https.proxy 127.0.0.1:10809</p>
<h2 id="查看git设置可以省略">3.查看git设置（可以省略）：</h2>
<p>PS D:&gt; git config --global -l</p>
<p>user.email=xxx@qq.com user.name=xxx http.proxy=127.0.0.1:10809
https.proxy=127.0.0.1:10809</p>
<h2
id="再次push-或者-pull-即可保险起见可以先在cmd窗口中使用-ipconfigflushdns-刷新dns缓存">4.再次push
或者 pull 即可（保险起见可以先在cmd窗口中使用 ipconfig/flushdns
刷新dns缓存）。</h2>
<h1
id="二如果没有挂着梯子但是还是遇到了以上报错">二、如果没有挂着梯子但是还是遇到了以上报错</h1>
<p>还是一样的原因，两边端口不一致导致的，那么直接去掉git代理即可：</p>
<p>git config --global --unset http.proxy</p>
<p>git config --global --unset https.proxy</p>
<p>再次push 或者 pull 即可（保险起见可以先在cmd窗口中使用
ipconfig/flushdns 刷新dns缓存）。</p>
<p>原文链接：https://blog.csdn.net/qq_40296909/article/details/134285451</p>
]]></content>
      <categories>
        <category>Bugs</category>
      </categories>
  </entry>
  <entry>
    <title>在linux的命令中行运行matlab</title>
    <url>/2024/10/20/UsefulUse/RunMatlabProgramonLinuxCommandLine/</url>
    <content><![CDATA[<style>
  img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 80%; /* 根据需要调整大小 */
  }
</style>
<p>当我们已经通过ssh连接了远程服务器之后，之所以能够在命令行运行<code>python test.py</code>的原因是：在linux安装anaconda的时候，会自动生成一个python的全局变量，因此可以直接在命令行运行python，但是安装matlab，默认并不会设置环境变量，下面我们介绍一下matlab如何在linux的命令行中运行。</p>
<p>首先，找到当前linux系统中matlab的安装位置，以<code>/usr/local/MATLAB/R2023a/bin/matlab</code>为例。首先，确保当前的输入法是英文输入法，并且是小写，这点非常重要。</p>
<span id="more"></span>
<p><strong>设置环境变量</strong></p>
<ol type="1">
<li>在命令行中运行这个命令<code>vim ~/.bashrc</code>。<br />
</li>
<li>尝试按下键盘的上下左右此时你会发现光标的移动，按住下键，直到光标位于最后一行，确保当前的输入法环境是小写英文，下面一直是这个要求，不再重复。当光标到达最后一行，只需要按下<code>o</code>，光标会移动到下一行，并且左下角会出现insert的字样，此时将这个代码粘贴进去<code>export PATH=$PATH:/usr/local/MATLAB/R2023a/bin</code>,注意这里粘贴需要使用鼠标右键的粘贴，接下来准备退出编辑器，按下<code>esc</code>键，退出insert模式，按住<code>shift+;</code>，也就是打出<code>:</code>,再按下wq，最终的命令是<code>:wq</code>,最后按下<code>enter</code>,就退出了编辑器，返回到了命令行界面.<br />
</li>
<li>距离环境变量的配置还差最后一步，在命令行执行这个命令<code>source ~/.bashrc</code>，这就结束了，现在我们就可以在命令行输入<code>matlab</code>直接打开matlab客户端了。</li>
</ol>
<p><strong>添加shell脚本</strong></p>
<p>打开你的matlab的文件夹，里面有你的matlab代码，在这个文件夹空白的地方按下鼠标右键，打开终端命令，在终端中执行<code>ls</code>,你应该能看到你的matlab代码，假设这有有一个名字是<code>test.m</code>
的代码，
下面是代码的内容，你也可以设置同样的代码，用来测试你是否成功配置环境。
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% test.m</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">3</span></span><br><span class="line">    <span class="built_in">i</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
下面我们尝试在命令行运行他，在终端输入<code>matlab -batch test</code>，注意这里输入的是<code>test</code>而不是<code>test.m</code>,稍等一会，命令行输出1，2，3的字样。</p>
<p>接下来我们编写一个shell脚本用来运行它，当然如果你觉得每次多输入<code>-batch</code>不算麻烦的话，下面的内容就不需要看了。
1.
输入这个命令<code>cd /home/username/bin/</code>,这里<code>username</code>输入你的英文名，也就是linux的主机名，开启电脑时，登陆界面的那个名字。输入<code>pwd</code>，确保当前路径是<code>/home/zuoruchun/bin/</code>.
2.
接下来在终端输入<code>vim matlab.sh</code>，按下<code>i</code>，进入insert模式，将下面的代码粘贴进去，注意这里粘贴需要使用鼠标右键的粘贴。同样的，按下<code>esc</code>，键入<code>:wq</code>退出编辑器。
3.
赋予脚本执行权限.在终端中运行以下命令：<code>chmod +x matlab.sh</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否提供了脚本名称</span></span><br><span class="line">if [ $# -eq 0 ]; then</span><br><span class="line">    echo &quot;使用方法: matlab_run.sh your_script_name&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行 MATLAB 脚本并输出日志</span></span><br><span class="line">echo &quot;开始运行 MATLAB 脚本: $1&quot;</span><br><span class="line">matlab -batch &quot;$1&quot;</span><br></pre></td></tr></table></figure>
<p>大功告成，接下来，我们只需要在命令行输入<code>matlab.sh test</code>，就可以运行这个代码了。</p>
]]></content>
      <categories>
        <category>ssh</category>
      </categories>
  </entry>
  <entry>
    <title>hexo使用方法</title>
    <url>/2024/08/07/Git/HexoUseMethods/</url>
    <content><![CDATA[<p>使用git进入路径<code>C:\Users\Administrator\blog</code>，接下来启用命令
- <strong>git
clean</strong>：每次启动Local或者将文章推到远端之前都要进行此操作 -
<strong>git
s</strong>：启用后可在<code>http://localhost:4000/</code>，查看Local的文章状态
- <strong>推送远端</strong>：<code>git g</code> -&gt;
<code>git d</code></p>
]]></content>
      <categories>
        <category>Computer common sense</category>
      </categories>
  </entry>
  <entry>
    <title>上传文件到服务器</title>
    <url>/2024/10/22/UsefulUse/UploadFiletoServer/</url>
    <content><![CDATA[<style>
  img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 80%; /* 根据需要调整大小 */
  }
</style>
<p>要想完美的使用在本地就能操作远端服务器的文件，由于是无图形化界面，相比于图形化界面，获取文件的方式也发生了变化，由于是无图形化界面，无法使用浏览器进行下载。我们采用的方式也是使用ssh完成的，首先将需要在服务器中使用的文件下载到本地，这里以<code>DeepLearningPython</code>文件夹为例，使用ssh将它从本地上传到服务器，下面分为Mac和Windows分别进行介绍。</p>
<span id="more"></span>
<h1 id="mac">Mac</h1>
<p><strong>1.下载Termius</strong>
首先点击下载<a href="https://termius.com/free-ssh-client-for-mac-os" style="color: #FF5733; text-decoration: none;">Termius</a></p>
<p><strong>2.配置ssh环境</strong></p>
<p>首先，点击newhost <img src="/pic/newhost.png" title="newhost"
alt="img" /></p>
<!-- <p align="center">
    <img src="/pic/newhost.png" alt="newhost" width="50%">
</p> -->
<p>然后按照自己的ip和username进行配置之后,点击connect。 <img
src="/pic/turmius配置.png" title="turmius配置" alt="img" />
出现下面的界面就意味着，登陆成功。 <img src="/pic/login.png"
title="login" alt="img" /> 在SFTP界面点击select
host，双击刚刚的host，然后就能看到右边的远端服务器的文件目录了，左边是本地的。
<img src="/pic/selecthost.png" title="selecthost" alt="img" />
下面需要上传什么文件就直接拖动文件就可以了。 <img src="/pic/SFTP.png"
title="SFTP" alt="img" /> 等待传输完成。</p>
<h1 id="windows">Windows</h1>
<p>点击下载<a href="https://www.xshell.com/zh/free-for-home-school/" style="color: #FF5733; text-decoration: none;">XFTP</a>
对于XFTP，需要注意的是，该软件使用一定时间之后需要重新到上述网站重新下载安装才能使用，时间大概是一个月（Xshell同理）</p>
<p>参考<a href="https://blog.csdn.net/m0_49448331/article/details/125767862" style="color: #FF5733; text-decoration: none;">CSDN</a>的教程.</p>
]]></content>
      <categories>
        <category>ssh</category>
      </categories>
  </entry>
  <entry>
    <title>ssh利用服务器在本地编写代码，并且利用远程服务器编译</title>
    <url>/2024/10/19/UsefulUse/UsetheServertoWriteCodeLocallyandCompileswithRemoteServer/</url>
    <content><![CDATA[<style>
  img {
      display: block;
      margin-left: auto;
      margin-right: auto;
      width: 80%; /* 根据需要调整大小 */
  }
</style>
<p><strong>1.准备工作</strong></p>
<p>在VsCode中安装下面的插件：<br />
Reomte Explorer, Remote - SSh, Remote - SSH:Editing, Remote - Tunnels,
Remote Development;<br />
于是在VsCode侧边栏会出现一个类似与电脑的图标。</p>
<span id="more"></span>
<figure>
<img src="/pic/ssh配置1.png" title="ssh配置1" alt="img" />
<figcaption aria-hidden="true">img</figcaption>
</figure>
<p><strong>2.获取服务器的username和ip</strong></p>
<p>在linux机器的终端输入<code>whoami</code>,终端返回的即是username；
在linux机器的终端输入<code>ifconfig</code>,终端中的inet即为当前机器的ip地址，例如173.48.29.103；
<img src="/pic/ip.png" title="ip" alt="img" /></p>
<p><strong>3.连接</strong></p>
<p>点击加号, 输入<code>ssh username@ip</code>,
之后会让你打开config配置文件, 按照下面的格式将服务器的Host添加进去 <img
src="/pic/config.jpg" title="config" alt="img" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host name			# name可以任意填写</span><br><span class="line">	HostName ip		# 填写服务器ip</span><br><span class="line">	Port 22			# 服务器段口号（不作修改）</span><br><span class="line">	User zuoruchun	# 登陆用户名username</span><br></pre></td></tr></table></figure>
<p>保存配置文件。<br />
之后就可以在侧边栏连接这个服务器了, 后面就可以使用VsCode在本地编写代码,
然后使用服务器的poython解释器编译文件了。 <img src="/pic/ssh配置2.png"
title="ssh配置2" alt="img" /> <strong>4.使用</strong></p>
<p>下面介绍如何利用ssh,在本地编写代码，使用远程服务器编译。如果不进行ssh连接，直接打开vscode，这个时候vscode左边代表的是本地文件夹，我们可以双击某个文件，比如python文件，然后在窗口编辑代码，然后运行，这个是常规的本地运行。使用ssh后，运行远端服务器的代码也是类似，这不过这个时候，左侧的文件夹位置已经变成了远端服务器的文件地址，下面你就可以想象这个vscode不再是本地的vscode，而是远端服务器的vscode，类似打开文件夹的操作，他不会跳转到本地的文件地址，而是会跳转到远端的地址；同理，编辑代码界面也是一样，我们可以打开远端的一个python文件，类似于在本地编辑那样，对这个python文件进行修改，运行，这些都是在本地操作的，但是他们修改的实际上是远端的文件，运行的python解释器，CPU和GPU等等，使用的都是远端服务器上的。换句话说，除了在本地进行编辑操作，其他的操作实际上都是在远端服务器上进行的。</p>
<p><strong>5.备注</strong>
ssh命令一般只能在同一个局域网之下才能够使用，如果不是同一个局域网，需要内网穿透，貌似大致就是买一个服务器，让两台电脑连接服务器的网络，就能够进行正常的ssh了。</p>
<h1
id="但是最最最最重要的一点是可以使用motionpro连接校园网这同样保证了网络在同一局域网之下于是就能够保证即使不在学校依然能够使用进行ssh">但是最最最最重要的一点是，可以使用MotionPro连接校园网，这同样保证了网络在同一局域网之下，于是就能够保证即使不在学校，依然能够使用进行ssh！</h1>
]]></content>
      <categories>
        <category>ssh</category>
      </categories>
  </entry>
  <entry>
    <title>随手写</title>
    <url>/2023/06/09/UsefulUse/WriteCasually/</url>
    <content><![CDATA[<p>导数那个题</p>
]]></content>
      <categories>
        <category>Linxiao</category>
      </categories>
  </entry>
  <entry>
    <title>随手写</title>
    <url>/2024/11/20/UsefulUse/bingsearch/</url>
    <content><![CDATA[<p>求求你了Bing！快点收录我的网站，你看看Google，人家多迅速！</p>
]]></content>
      <categories>
        <category>Linxiao</category>
      </categories>
  </entry>
</search>
